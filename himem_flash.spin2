''
'' loader for high memory
'' flash version
''
'' this will be loaded to $FC000 and run from there,
'' so hub addresses need to be relocatable
''
'' The main loader will call the original entry point at
'' $FC000, which should do any initialization and return
'' a pointer to a mailbox to use in ptra
''
'' This initialization should generally consist of firing
'' up a COG which will handle the writes asynchonously
'' (so the main code can continue to handle serial I/O).
''
'' When the main loader needs to write data, it will set up
'' the mailbox like:
''    +0 = hub address (non-zero, also not -1)
''    +4 = flash address
''    +8 = size in bytes (currently always <=1K)
''
'' when the writer is finished, it should overwrite these with:
''    +0 = 0 (indicates finished)
''    +4 = status (0 for OK, -1 for error)
''
'' when the main loader is completely finished, it will set
'' the hub address to -1: this indicates to the writer that it should
'' shut down
''
'' The initialization code is allowed to use pa, pb, ptra, and ptrb
'' as well as registers $1d0-$1e0
''
dat
	orgh
enter
	mov	pa, #16
	loc	pb, #code
	loc	ptra, #mailbox
	setq	ptra
	coginit pa, pb
	ret
mailbox
	long    0[4]
' error messages must follow mailbox
err_badaddr
	byte "Address must be a multiple of 256", 0

	' and here comes the code
	alignl
code

''
'' the actual driver code
'' entered with ptra pointing at the mailbox
'' (we'll leave it that way)
''
	org	0

	' wait for request to arrive in mailbox
mainloop
	setq	#3
	rdlong	params, ptra
	tjz	hubaddr, #mainloop

	' process the request
process_request
	tjf	hubaddr, #endit		' address of -1 means quit

	test	ouraddr, #$FF wz	' check for bottom address bits all 0
 if_nz	jmp	#bad_address
 
	' for now just toggle the pin
	drvl	#56
	waitx	##18_000_000
	drvh	#56
	waitx	##18_000_000

	' and clear the response
	mov	params+0, #0
	mov	params+1, #0
send_response
	setq	#1
	wrlong	params, ptra
	
	jmp	#mainloop
endit
	drvh	#56
	cogid	pb
	cogstop	pb

bad_address
	mov	params+0, #0
	mov	params+1, ptra
	add	params+1, #(@err_badaddr-@mailbox)
	jmp	#send_response

	' and our variables
params
hubaddr
	res	1
ouraddr
	res	1
size
	res	1
reserved
	res	1

