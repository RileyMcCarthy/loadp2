CON
		rxpin = 63
		
DAT		org

begin		hubset	clkmode_			'set up oscillator 
                waitx   ##20_000_000/100        'wait 10 ms
                or      clkmode_, #3             'enable XI+PLL mode
                hubset  clkmode_                 'enable oscillator
		tjz	forcezero, #skipzero
		'' zero out memory
		wrfast	#0,0
		mov	pb, ##$7c0000/16
		mov	forcezero, #0
zeroloop
		wflong	forcezero
		wflong	forcezero
		wflong	forcezero
		wflong	forcezero
		djnz	pb, #zeroloop
		rdfast	#0,#0			' wait for last byte to be written
skipzero
		wrfast	#0,address		'ready to write entire memory starting at address
		setse1	#%010_000000 | rxpin	'select negative edge on p63
		nop		       		' give time to settle
		
mainloop	pollse1				'clear edge detector
		waitse1				'wait for start bit
		waitx	waitbit1_5		'wait for middle of 1st data bit

		rep	@loopend,#8		'get 8 bits
		testp	#rxpin		wc	'sample rx
		rcr	rxbyte,#1		'rotate bit into byte
		waitx	waitbit			'wait for middle of nth data bit
loopend
		shr	rxbyte,#32-8		'justify received byte
		wfbyte	rxbyte			'write to hub

		djnz	filesize,#mainloop	'loop until all bytes received

                rdfast  #0,#0                   'wait for last byte to be written

		'' short pause for host to change baud
		''waitx	##20_000_000/10
		
		' switch back to rcfast mode, maybe
		rdlong	 rxbyte, #$18 wz	' fetch program's clock mode
	if_nz	coginit	 #0, address
		andn	 clkmode_, #3
		hubset	 clkmode_
		waitx	 ##20_000_000/100
		hubset	 #0
		coginit	#0,address		'launch cog 0 from address

		orgf	$80
clkmode_	res	1			'clock mode
waitbit1_5	res	1			'1.5 bit cycles = 3*clock_freq/baud_rate/2 - 6
waitbit		res	1			'1 bit cycles = clock_freq/baud_rate - 6
filesize	res	1			'binary file size in bytes
address		res	1			'starting address
forcezero	res	1			'if non-zero, clear RAM
rxbyte		res	1			'received byte
