CON
		tx_pin = 62
		rx_pin = 63
		FLAGBIT_ZERO = $1		' if set, zero HUB memory
		FLAGBIT_PATCHED = $2		' if set, clock frequency was patched into binary
  '' smart pin modes
  _txmode       = %0000_0000_000_0000000000000_01_11110_0 'async tx mode, output enabled for smart output
  _rxmode       = %0000_0000_000_0000000000000_00_11111_0 'async rx mode, input  enabled for smart input
		
DAT		org

begin		hubset	clkmode_			'set up oscillator 
                waitx   ##25_000_000/100        'wait >10 ms
                or      clkmode_, #3             'enable XI+PLL mode
                hubset  clkmode_                 'enable oscillator
		test	flagbits, #FLAGBIT_ZERO wz
	if_nz	jmp	#skipzero
		'' zero out memory
		wrfast	#0,0
		mov	pb, ##$7c0000/16
zeroloop
		wflong	zeros
		wflong	zeros
		wflong	zeros
		wflong	zeros
		djnz	pb, #zeroloop
		rdfast	#0,#0			' wait for last byte to be written
skipzero
		'' set up uart smart pins
		mov    pa, waitbit
		shl    pa, #16
		add    pa, #7
		wrpin  ##_txmode, #tx_pin
		wxpin  pa, #tx_pin
		dirh   #tx_pin
		wrpin  ##_rxmode, #rx_pin
		wxpin  pa, #rx_pin
		dirh   #rx_pin
		
		
		wrfast	#0,address		'ready to write entire memory starting at address
		nop		       		' give time to settle
		
mainloop
		testp	#rx_pin wc
	if_nc	jmp	#mainloop
		rdpin	rxbyte, #rx_pin
		shr	rxbyte, #24

		wfbyte	rxbyte			'write to hub

		djnz	filesize,#mainloop	'loop until all bytes received

                rdfast  #0,#0                   'wait for last byte to be written

		'' short pause for host to change baud
		waitx	##25_000_000/10
		
		' switch back to rcfast mode, maybe
		' if the binary was patched with -PATCH then we skip this
		test	flagbits, #FLAGBIT_PATCHED wz
	if_z	jmp	#start_cog		 ' patched, so start right now

		' go back to rcfast mode
		andn	 clkmode_, #3
		hubset	 clkmode_
		hubset	 #0
		waitx	 ##25_000_000/100
start_cog
		coginit	#0,address		'launch cog 0 from address

zeros
		long	0
		
		orgf	$80
clkmode_	res	1			'clock mode
waitbit1_5	res	1			'1.5 bit cycles = 3*clock_freq/baud_rate/2 - 6
waitbit		res	1			'1 bit cycles = clock_freq/baud_rate - 6
filesize	res	1			'binary file size in bytes
address		res	1			'starting address
flagbits	res	1			'flag bits, see definitions above
rxbyte		res	1			'received byte
